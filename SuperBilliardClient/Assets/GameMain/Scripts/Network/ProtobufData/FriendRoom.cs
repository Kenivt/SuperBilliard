// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: FriendRoom.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GameMessage {

  /// <summary>Holder for reflection information generated from FriendRoom.proto</summary>
  public static partial class FriendRoomReflection {

    #region Descriptor
    /// <summary>File descriptor for FriendRoom.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FriendRoomReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBGcmllbmRSb29tLnByb3RvEgtHYW1lTWVzc2FnZRoRR2FtZU1lc3NhZ2Uu",
            "cHJvdG8ifQoUQ1NJbnZpdGVGcmllbmRCYXR0bGUSEwoLb3duVXNlck5hbWUY",
            "ASABKAkSFwoPaW52aXRlZVVzZXJOYW1lGAIgASgJEicKCGdhbWVUeXBlGAMg",
            "ASgOMhUuR2FtZU1lc3NhZ2UuR2FtZVR5cGUSDgoGcm9vbUlkGAQgASgFImgK",
            "FFNDSW52aXRlRnJpZW5kQmF0dGxlEhcKD2ludml0ZWVVc2VybmFtZRgBIAEo",
            "CRInCghnYW1lVHlwZRgCIAEoDjIVLkdhbWVNZXNzYWdlLkdhbWVUeXBlEg4K",
            "BnJvb21JZBgDIAEoBSJ/ChZDU0FjY2VwdEdhbWVJbnZpdGF0aW9uEhcKD2lu",
            "dml0ZXJVc2VyTmFtZRgBIAEoCRITCgtvd25Vc2VybmFtZRgCIAEoCRInCghn",
            "YW1lVHlwZRgDIAEoDjIVLkdhbWVNZXNzYWdlLkdhbWVUeXBlEg4KBnJvb21J",
            "ZBgEIAEoBSKvAQoWU0NBY2NlcHRHYW1lSW52aXRhdGlvbhIXCg9pbnZpdGVy",
            "VXNlcm5hbWUYASABKAkSEwoLb3duVXNlcm5hbWUYAiABKAkSJwoIZ2FtZVR5",
            "cGUYAyABKA4yFS5HYW1lTWVzc2FnZS5HYW1lVHlwZRItCgZyZXN1bHQYBCAB",
            "KA4yHS5HYW1lTWVzc2FnZS5JbnZpdGF0aW9uUmVzdWx0Eg8KB2lzUmVhZHkY",
            "BSABKAgiVgoSU0NJbnZpdGVlRW50ZXJSb29tEhcKD2ludml0ZWVVc2VybmFt",
            "ZRgBIAEoCRInCghnYW1lVHlwZRgCIAEoDjIVLkdhbWVNZXNzYWdlLkdhbWVU",
            "eXBlIkkKDENTQ3JlYXRlUm9vbRIQCgh1c2VybmFtZRgBIAEoCRInCghnYW1l",
            "VHlwZRgCIAEoDjIVLkdhbWVNZXNzYWdlLkdhbWVUeXBlIkcKDFNDQ3JlYXRl",
            "Um9vbRInCghnYW1lVHlwZRgBIAEoDjIVLkdhbWVNZXNzYWdlLkdhbWVUeXBl",
            "Eg4KBnJvb21JZBgCIAEoBSIwCgtDU1JlYWR5R2FtZRIQCgh1c2VybmFtZRgB",
            "IAEoCRIPCgdpc1JlYWR5GAIgASgIIjAKC1NDUmVhZHlHYW1lEhAKCHVzZXJu",
            "YW1lGAEgASgJEg8KB2lzUmVhZHkYAiABKAgiHwoLQ1NMZWF2ZVJvb20SEAoI",
            "dXNlcm5hbWUYASABKAkiHwoLU0NMZWF2ZVJvb20SEAoIdXNlcm5hbWUYASAB",
            "KAkqSwoQSW52aXRhdGlvblJlc3VsdBIICgROb25lEAASCwoHU3VjY2VzcxAB",
            "Eg4KClJvb21Jc0Z1bGwQAhIQCgxSb29tTm90RXhpc3QQA2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::GameMessage.GameMessageReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::GameMessage.InvitationResult), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GameMessage.CSInviteFriendBattle), global::GameMessage.CSInviteFriendBattle.Parser, new[]{ "OwnUserName", "InviteeUserName", "GameType", "RoomId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameMessage.SCInviteFriendBattle), global::GameMessage.SCInviteFriendBattle.Parser, new[]{ "InviteeUsername", "GameType", "RoomId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameMessage.CSAcceptGameInvitation), global::GameMessage.CSAcceptGameInvitation.Parser, new[]{ "InviterUserName", "OwnUsername", "GameType", "RoomId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameMessage.SCAcceptGameInvitation), global::GameMessage.SCAcceptGameInvitation.Parser, new[]{ "InviterUsername", "OwnUsername", "GameType", "Result", "IsReady" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameMessage.SCInviteeEnterRoom), global::GameMessage.SCInviteeEnterRoom.Parser, new[]{ "InviteeUsername", "GameType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameMessage.CSCreateRoom), global::GameMessage.CSCreateRoom.Parser, new[]{ "Username", "GameType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameMessage.SCCreateRoom), global::GameMessage.SCCreateRoom.Parser, new[]{ "GameType", "RoomId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameMessage.CSReadyGame), global::GameMessage.CSReadyGame.Parser, new[]{ "Username", "IsReady" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameMessage.SCReadyGame), global::GameMessage.SCReadyGame.Parser, new[]{ "Username", "IsReady" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameMessage.CSLeaveRoom), global::GameMessage.CSLeaveRoom.Parser, new[]{ "Username" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameMessage.SCLeaveRoom), global::GameMessage.SCLeaveRoom.Parser, new[]{ "Username" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///邀请结果
  ///被邀请者同意后出现的错误信息
  /// </summary>
  public enum InvitationResult {
    [pbr::OriginalName("None")] None = 0,
    [pbr::OriginalName("Success")] Success = 1,
    [pbr::OriginalName("RoomIsFull")] RoomIsFull = 2,
    [pbr::OriginalName("RoomNotExist")] RoomNotExist = 3,
  }

  #endregion

  #region Messages
  public sealed partial class CSInviteFriendBattle : pb::IMessage<CSInviteFriendBattle> {
    private static readonly pb::MessageParser<CSInviteFriendBattle> _parser = new pb::MessageParser<CSInviteFriendBattle>(() => new CSInviteFriendBattle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSInviteFriendBattle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameMessage.FriendRoomReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSInviteFriendBattle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSInviteFriendBattle(CSInviteFriendBattle other) : this() {
      ownUserName_ = other.ownUserName_;
      inviteeUserName_ = other.inviteeUserName_;
      gameType_ = other.gameType_;
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSInviteFriendBattle Clone() {
      return new CSInviteFriendBattle(this);
    }

    /// <summary>Field number for the "ownUserName" field.</summary>
    public const int OwnUserNameFieldNumber = 1;
    private string ownUserName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnUserName {
      get { return ownUserName_; }
      set {
        ownUserName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inviteeUserName" field.</summary>
    public const int InviteeUserNameFieldNumber = 2;
    private string inviteeUserName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteeUserName {
      get { return inviteeUserName_; }
      set {
        inviteeUserName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameType" field.</summary>
    public const int GameTypeFieldNumber = 3;
    private global::GameMessage.GameType gameType_ = global::GameMessage.GameType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GameMessage.GameType GameType {
      get { return gameType_; }
      set {
        gameType_ = value;
      }
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 4;
    private int roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSInviteFriendBattle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSInviteFriendBattle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnUserName != other.OwnUserName) return false;
      if (InviteeUserName != other.InviteeUserName) return false;
      if (GameType != other.GameType) return false;
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnUserName.Length != 0) hash ^= OwnUserName.GetHashCode();
      if (InviteeUserName.Length != 0) hash ^= InviteeUserName.GetHashCode();
      if (GameType != global::GameMessage.GameType.None) hash ^= GameType.GetHashCode();
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnUserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OwnUserName);
      }
      if (InviteeUserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InviteeUserName);
      }
      if (GameType != global::GameMessage.GameType.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GameType);
      }
      if (RoomId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnUserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnUserName);
      }
      if (InviteeUserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteeUserName);
      }
      if (GameType != global::GameMessage.GameType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameType);
      }
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSInviteFriendBattle other) {
      if (other == null) {
        return;
      }
      if (other.OwnUserName.Length != 0) {
        OwnUserName = other.OwnUserName;
      }
      if (other.InviteeUserName.Length != 0) {
        InviteeUserName = other.InviteeUserName;
      }
      if (other.GameType != global::GameMessage.GameType.None) {
        GameType = other.GameType;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnUserName = input.ReadString();
            break;
          }
          case 18: {
            InviteeUserName = input.ReadString();
            break;
          }
          case 24: {
            GameType = (global::GameMessage.GameType) input.ReadEnum();
            break;
          }
          case 32: {
            RoomId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SCInviteFriendBattle : pb::IMessage<SCInviteFriendBattle> {
    private static readonly pb::MessageParser<SCInviteFriendBattle> _parser = new pb::MessageParser<SCInviteFriendBattle>(() => new SCInviteFriendBattle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCInviteFriendBattle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameMessage.FriendRoomReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCInviteFriendBattle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCInviteFriendBattle(SCInviteFriendBattle other) : this() {
      inviteeUsername_ = other.inviteeUsername_;
      gameType_ = other.gameType_;
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCInviteFriendBattle Clone() {
      return new SCInviteFriendBattle(this);
    }

    /// <summary>Field number for the "inviteeUsername" field.</summary>
    public const int InviteeUsernameFieldNumber = 1;
    private string inviteeUsername_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteeUsername {
      get { return inviteeUsername_; }
      set {
        inviteeUsername_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameType" field.</summary>
    public const int GameTypeFieldNumber = 2;
    private global::GameMessage.GameType gameType_ = global::GameMessage.GameType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GameMessage.GameType GameType {
      get { return gameType_; }
      set {
        gameType_ = value;
      }
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 3;
    private int roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCInviteFriendBattle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCInviteFriendBattle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InviteeUsername != other.InviteeUsername) return false;
      if (GameType != other.GameType) return false;
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InviteeUsername.Length != 0) hash ^= InviteeUsername.GetHashCode();
      if (GameType != global::GameMessage.GameType.None) hash ^= GameType.GetHashCode();
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InviteeUsername.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InviteeUsername);
      }
      if (GameType != global::GameMessage.GameType.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) GameType);
      }
      if (RoomId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InviteeUsername.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteeUsername);
      }
      if (GameType != global::GameMessage.GameType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameType);
      }
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCInviteFriendBattle other) {
      if (other == null) {
        return;
      }
      if (other.InviteeUsername.Length != 0) {
        InviteeUsername = other.InviteeUsername;
      }
      if (other.GameType != global::GameMessage.GameType.None) {
        GameType = other.GameType;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InviteeUsername = input.ReadString();
            break;
          }
          case 16: {
            GameType = (global::GameMessage.GameType) input.ReadEnum();
            break;
          }
          case 24: {
            RoomId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///接受邀请
  /// </summary>
  public sealed partial class CSAcceptGameInvitation : pb::IMessage<CSAcceptGameInvitation> {
    private static readonly pb::MessageParser<CSAcceptGameInvitation> _parser = new pb::MessageParser<CSAcceptGameInvitation>(() => new CSAcceptGameInvitation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSAcceptGameInvitation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameMessage.FriendRoomReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSAcceptGameInvitation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSAcceptGameInvitation(CSAcceptGameInvitation other) : this() {
      inviterUserName_ = other.inviterUserName_;
      ownUsername_ = other.ownUsername_;
      gameType_ = other.gameType_;
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSAcceptGameInvitation Clone() {
      return new CSAcceptGameInvitation(this);
    }

    /// <summary>Field number for the "inviterUserName" field.</summary>
    public const int InviterUserNameFieldNumber = 1;
    private string inviterUserName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviterUserName {
      get { return inviterUserName_; }
      set {
        inviterUserName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ownUsername" field.</summary>
    public const int OwnUsernameFieldNumber = 2;
    private string ownUsername_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnUsername {
      get { return ownUsername_; }
      set {
        ownUsername_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameType" field.</summary>
    public const int GameTypeFieldNumber = 3;
    private global::GameMessage.GameType gameType_ = global::GameMessage.GameType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GameMessage.GameType GameType {
      get { return gameType_; }
      set {
        gameType_ = value;
      }
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 4;
    private int roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSAcceptGameInvitation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSAcceptGameInvitation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InviterUserName != other.InviterUserName) return false;
      if (OwnUsername != other.OwnUsername) return false;
      if (GameType != other.GameType) return false;
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InviterUserName.Length != 0) hash ^= InviterUserName.GetHashCode();
      if (OwnUsername.Length != 0) hash ^= OwnUsername.GetHashCode();
      if (GameType != global::GameMessage.GameType.None) hash ^= GameType.GetHashCode();
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InviterUserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InviterUserName);
      }
      if (OwnUsername.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OwnUsername);
      }
      if (GameType != global::GameMessage.GameType.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GameType);
      }
      if (RoomId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InviterUserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InviterUserName);
      }
      if (OwnUsername.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnUsername);
      }
      if (GameType != global::GameMessage.GameType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameType);
      }
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSAcceptGameInvitation other) {
      if (other == null) {
        return;
      }
      if (other.InviterUserName.Length != 0) {
        InviterUserName = other.InviterUserName;
      }
      if (other.OwnUsername.Length != 0) {
        OwnUsername = other.OwnUsername;
      }
      if (other.GameType != global::GameMessage.GameType.None) {
        GameType = other.GameType;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InviterUserName = input.ReadString();
            break;
          }
          case 18: {
            OwnUsername = input.ReadString();
            break;
          }
          case 24: {
            GameType = (global::GameMessage.GameType) input.ReadEnum();
            break;
          }
          case 32: {
            RoomId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///接收邀请后的回调,包含是否成功执行和错误的信息InvitationResult
  /// </summary>
  public sealed partial class SCAcceptGameInvitation : pb::IMessage<SCAcceptGameInvitation> {
    private static readonly pb::MessageParser<SCAcceptGameInvitation> _parser = new pb::MessageParser<SCAcceptGameInvitation>(() => new SCAcceptGameInvitation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCAcceptGameInvitation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameMessage.FriendRoomReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCAcceptGameInvitation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCAcceptGameInvitation(SCAcceptGameInvitation other) : this() {
      inviterUsername_ = other.inviterUsername_;
      ownUsername_ = other.ownUsername_;
      gameType_ = other.gameType_;
      result_ = other.result_;
      isReady_ = other.isReady_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCAcceptGameInvitation Clone() {
      return new SCAcceptGameInvitation(this);
    }

    /// <summary>Field number for the "inviterUsername" field.</summary>
    public const int InviterUsernameFieldNumber = 1;
    private string inviterUsername_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviterUsername {
      get { return inviterUsername_; }
      set {
        inviterUsername_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ownUsername" field.</summary>
    public const int OwnUsernameFieldNumber = 2;
    private string ownUsername_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnUsername {
      get { return ownUsername_; }
      set {
        ownUsername_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameType" field.</summary>
    public const int GameTypeFieldNumber = 3;
    private global::GameMessage.GameType gameType_ = global::GameMessage.GameType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GameMessage.GameType GameType {
      get { return gameType_; }
      set {
        gameType_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 4;
    private global::GameMessage.InvitationResult result_ = global::GameMessage.InvitationResult.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GameMessage.InvitationResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "isReady" field.</summary>
    public const int IsReadyFieldNumber = 5;
    private bool isReady_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsReady {
      get { return isReady_; }
      set {
        isReady_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCAcceptGameInvitation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCAcceptGameInvitation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InviterUsername != other.InviterUsername) return false;
      if (OwnUsername != other.OwnUsername) return false;
      if (GameType != other.GameType) return false;
      if (Result != other.Result) return false;
      if (IsReady != other.IsReady) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InviterUsername.Length != 0) hash ^= InviterUsername.GetHashCode();
      if (OwnUsername.Length != 0) hash ^= OwnUsername.GetHashCode();
      if (GameType != global::GameMessage.GameType.None) hash ^= GameType.GetHashCode();
      if (Result != global::GameMessage.InvitationResult.None) hash ^= Result.GetHashCode();
      if (IsReady != false) hash ^= IsReady.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InviterUsername.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InviterUsername);
      }
      if (OwnUsername.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OwnUsername);
      }
      if (GameType != global::GameMessage.GameType.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GameType);
      }
      if (Result != global::GameMessage.InvitationResult.None) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Result);
      }
      if (IsReady != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsReady);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InviterUsername.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InviterUsername);
      }
      if (OwnUsername.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnUsername);
      }
      if (GameType != global::GameMessage.GameType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameType);
      }
      if (Result != global::GameMessage.InvitationResult.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (IsReady != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCAcceptGameInvitation other) {
      if (other == null) {
        return;
      }
      if (other.InviterUsername.Length != 0) {
        InviterUsername = other.InviterUsername;
      }
      if (other.OwnUsername.Length != 0) {
        OwnUsername = other.OwnUsername;
      }
      if (other.GameType != global::GameMessage.GameType.None) {
        GameType = other.GameType;
      }
      if (other.Result != global::GameMessage.InvitationResult.None) {
        Result = other.Result;
      }
      if (other.IsReady != false) {
        IsReady = other.IsReady;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InviterUsername = input.ReadString();
            break;
          }
          case 18: {
            OwnUsername = input.ReadString();
            break;
          }
          case 24: {
            GameType = (global::GameMessage.GameType) input.ReadEnum();
            break;
          }
          case 32: {
            Result = (global::GameMessage.InvitationResult) input.ReadEnum();
            break;
          }
          case 40: {
            IsReady = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///被邀请者加入房间的信息
  /// </summary>
  public sealed partial class SCInviteeEnterRoom : pb::IMessage<SCInviteeEnterRoom> {
    private static readonly pb::MessageParser<SCInviteeEnterRoom> _parser = new pb::MessageParser<SCInviteeEnterRoom>(() => new SCInviteeEnterRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCInviteeEnterRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameMessage.FriendRoomReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCInviteeEnterRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCInviteeEnterRoom(SCInviteeEnterRoom other) : this() {
      inviteeUsername_ = other.inviteeUsername_;
      gameType_ = other.gameType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCInviteeEnterRoom Clone() {
      return new SCInviteeEnterRoom(this);
    }

    /// <summary>Field number for the "inviteeUsername" field.</summary>
    public const int InviteeUsernameFieldNumber = 1;
    private string inviteeUsername_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteeUsername {
      get { return inviteeUsername_; }
      set {
        inviteeUsername_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameType" field.</summary>
    public const int GameTypeFieldNumber = 2;
    private global::GameMessage.GameType gameType_ = global::GameMessage.GameType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GameMessage.GameType GameType {
      get { return gameType_; }
      set {
        gameType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCInviteeEnterRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCInviteeEnterRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InviteeUsername != other.InviteeUsername) return false;
      if (GameType != other.GameType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InviteeUsername.Length != 0) hash ^= InviteeUsername.GetHashCode();
      if (GameType != global::GameMessage.GameType.None) hash ^= GameType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InviteeUsername.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InviteeUsername);
      }
      if (GameType != global::GameMessage.GameType.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) GameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InviteeUsername.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteeUsername);
      }
      if (GameType != global::GameMessage.GameType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCInviteeEnterRoom other) {
      if (other == null) {
        return;
      }
      if (other.InviteeUsername.Length != 0) {
        InviteeUsername = other.InviteeUsername;
      }
      if (other.GameType != global::GameMessage.GameType.None) {
        GameType = other.GameType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InviteeUsername = input.ReadString();
            break;
          }
          case 16: {
            GameType = (global::GameMessage.GameType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///创建房间
  /// </summary>
  public sealed partial class CSCreateRoom : pb::IMessage<CSCreateRoom> {
    private static readonly pb::MessageParser<CSCreateRoom> _parser = new pb::MessageParser<CSCreateRoom>(() => new CSCreateRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSCreateRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameMessage.FriendRoomReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSCreateRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSCreateRoom(CSCreateRoom other) : this() {
      username_ = other.username_;
      gameType_ = other.gameType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSCreateRoom Clone() {
      return new CSCreateRoom(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameType" field.</summary>
    public const int GameTypeFieldNumber = 2;
    private global::GameMessage.GameType gameType_ = global::GameMessage.GameType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GameMessage.GameType GameType {
      get { return gameType_; }
      set {
        gameType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSCreateRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSCreateRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (GameType != other.GameType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (GameType != global::GameMessage.GameType.None) hash ^= GameType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (GameType != global::GameMessage.GameType.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) GameType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (GameType != global::GameMessage.GameType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSCreateRoom other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.GameType != global::GameMessage.GameType.None) {
        GameType = other.GameType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 16: {
            GameType = (global::GameMessage.GameType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SCCreateRoom : pb::IMessage<SCCreateRoom> {
    private static readonly pb::MessageParser<SCCreateRoom> _parser = new pb::MessageParser<SCCreateRoom>(() => new SCCreateRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCCreateRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameMessage.FriendRoomReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCCreateRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCCreateRoom(SCCreateRoom other) : this() {
      gameType_ = other.gameType_;
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCCreateRoom Clone() {
      return new SCCreateRoom(this);
    }

    /// <summary>Field number for the "gameType" field.</summary>
    public const int GameTypeFieldNumber = 1;
    private global::GameMessage.GameType gameType_ = global::GameMessage.GameType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GameMessage.GameType GameType {
      get { return gameType_; }
      set {
        gameType_ = value;
      }
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 2;
    private int roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCCreateRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCCreateRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameType != other.GameType) return false;
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameType != global::GameMessage.GameType.None) hash ^= GameType.GetHashCode();
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GameType != global::GameMessage.GameType.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) GameType);
      }
      if (RoomId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameType != global::GameMessage.GameType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameType);
      }
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCCreateRoom other) {
      if (other == null) {
        return;
      }
      if (other.GameType != global::GameMessage.GameType.None) {
        GameType = other.GameType;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameType = (global::GameMessage.GameType) input.ReadEnum();
            break;
          }
          case 16: {
            RoomId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///准备游戏
  /// </summary>
  public sealed partial class CSReadyGame : pb::IMessage<CSReadyGame> {
    private static readonly pb::MessageParser<CSReadyGame> _parser = new pb::MessageParser<CSReadyGame>(() => new CSReadyGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSReadyGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameMessage.FriendRoomReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSReadyGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSReadyGame(CSReadyGame other) : this() {
      username_ = other.username_;
      isReady_ = other.isReady_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSReadyGame Clone() {
      return new CSReadyGame(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isReady" field.</summary>
    public const int IsReadyFieldNumber = 2;
    private bool isReady_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsReady {
      get { return isReady_; }
      set {
        isReady_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSReadyGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSReadyGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (IsReady != other.IsReady) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (IsReady != false) hash ^= IsReady.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (IsReady != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsReady);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (IsReady != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSReadyGame other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.IsReady != false) {
        IsReady = other.IsReady;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 16: {
            IsReady = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SCReadyGame : pb::IMessage<SCReadyGame> {
    private static readonly pb::MessageParser<SCReadyGame> _parser = new pb::MessageParser<SCReadyGame>(() => new SCReadyGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCReadyGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameMessage.FriendRoomReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCReadyGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCReadyGame(SCReadyGame other) : this() {
      username_ = other.username_;
      isReady_ = other.isReady_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCReadyGame Clone() {
      return new SCReadyGame(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isReady" field.</summary>
    public const int IsReadyFieldNumber = 2;
    private bool isReady_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsReady {
      get { return isReady_; }
      set {
        isReady_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCReadyGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCReadyGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (IsReady != other.IsReady) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (IsReady != false) hash ^= IsReady.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (IsReady != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsReady);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (IsReady != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCReadyGame other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.IsReady != false) {
        IsReady = other.IsReady;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 16: {
            IsReady = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///离开房间
  /// </summary>
  public sealed partial class CSLeaveRoom : pb::IMessage<CSLeaveRoom> {
    private static readonly pb::MessageParser<CSLeaveRoom> _parser = new pb::MessageParser<CSLeaveRoom>(() => new CSLeaveRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSLeaveRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameMessage.FriendRoomReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLeaveRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLeaveRoom(CSLeaveRoom other) : this() {
      username_ = other.username_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLeaveRoom Clone() {
      return new CSLeaveRoom(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSLeaveRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSLeaveRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSLeaveRoom other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SCLeaveRoom : pb::IMessage<SCLeaveRoom> {
    private static readonly pb::MessageParser<SCLeaveRoom> _parser = new pb::MessageParser<SCLeaveRoom>(() => new SCLeaveRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCLeaveRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameMessage.FriendRoomReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLeaveRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLeaveRoom(SCLeaveRoom other) : this() {
      username_ = other.username_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLeaveRoom Clone() {
      return new SCLeaveRoom(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCLeaveRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCLeaveRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCLeaveRoom other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
